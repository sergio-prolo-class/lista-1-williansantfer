/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.Scanner;

public class App {
    
    public static void main(String[] args) {

        Scanner teclado = new Scanner(System.in);

        int somaAc = 0;
        int quantColunas = 0;
        boolean dimensaoValida;
        int i = 0;

        String[][] casas = new String[10][10];

        while(teclado.hasNext()){
            String linha = teclado.nextLine();
            somaAc++;
            String[] elementos = linha.split(" ");
            casas[i] = elementos;
            quantColunas = elementos.length;
            i++;
        }

        if (somaAc != 10 || quantColunas != 10) {
            dimensaoValida = false;
        } else {
            dimensaoValida = true;
        }

        if (dimensaoValida == false) {
            System.out.println("Tabuleiro Inválido. O tabuleiro precisa ter a dimensao 10 x 10.");
        } else {

            String[][] tabuleiro = new String[10][10];

            for (int j = 0; j < tabuleiro.length; j++) {
                for (int k = 0; k < tabuleiro[j].length; k++) {
                    tabuleiro[j][k] = casas[j][k];
                }
            }

            String condicao1 = verificarSeIncluiNaviosDesconhecidos(tabuleiro);
            String condicao2 = verificarSeIncluiMuiltiplosNaviosDoMesmoTipo(tabuleiro);
            String condicao3 = verificarSeNaoIncluiUmNavioDeCadaTipo(tabuleiro);

            if (condicao1.equals("valido") && condicao2.equals("valido") && condicao3.equals("valido")) {
                System.out.println("Tabuleiro válido");
            } else {
                System.out.println("Tabuleiro inválido");
            }
        }
        teclado.close();
    }

    public static String verificarSeIncluiNaviosDesconhecidos(String[][] tabuleiro) {

        int desconhecidoCont = 0;

        for (int i = 0; i < tabuleiro.length; i++) {
            for (int j = 0; j < tabuleiro[i].length; j++) {
                if (!tabuleiro[i][j].equals(".") && !tabuleiro[i][j].equals("P") && !tabuleiro[i][j].equals("E") &&
                !tabuleiro[i][j].equals("C") && !tabuleiro[i][j].equals("S") && !tabuleiro[i][j].equals("N")) {
                    desconhecidoCont++;
                }
            }
        }

        if (desconhecidoCont != 0) {
            System.out.println("Há navio(s) desconhecido(s) no tabuleiro.");
            return "invalido";
        } else {
            return "valido";
        }
    }

    public static String verificarSeIncluiMuiltiplosNaviosDoMesmoTipo(String[][] tabuleiro) {

        int portaAvioesCont = 0;
        int encouracadoCont = 0;
        int cruzadorCont = 0;
        int submarinoCont = 0;
        int contratorpedeiroCont = 0;

        for (int i = 0; i < tabuleiro.length; i++) {
            for (int j = 0; j < tabuleiro[i].length; j++) {

                if (tabuleiro[i][j].equals("P")) {
                    portaAvioesCont++;
                } else if (tabuleiro[i][j].equals("E")) {
                    encouracadoCont++;
                } else if (tabuleiro[i][j].equals("C")) {
                    cruzadorCont++;
                } else if(tabuleiro[i][j].equals("S")) {
                    submarinoCont++;
                } else if (tabuleiro[i][j].equals("N")) {
                    contratorpedeiroCont++;
                }
            }
        }

        if (portaAvioesCont > 5 || encouracadoCont > 4 || cruzadorCont > 3 || submarinoCont > 3 || contratorpedeiroCont > 2) {
            System.out.print("O tabuleiro não possui apenas um navio de cada tipo. ");

            if (portaAvioesCont > 5) {
                System.out.println("Há mais de um porta-aviões no tabuleiro.");
            }
            if (encouracadoCont > 4) {
                System.out.println("Há mais de um encouraçado no tabuleiro.");
            }
            if (cruzadorCont > 3) {
                System.out.println("Há mais de um cruzador no tabuleiro.");
            }
            if (submarinoCont > 3) {
                System.out.println("Há mais de um submarino no tabuleiro.");
            }
            if (contratorpedeiroCont > 2) {
                System.out.println("Há mais de um contratorpedeiro no tabuleiro.");
            }

            return "invalido";
        } else {
            return "valido";
        }
    }

    public static String verificarSeNaoIncluiUmNavioDeCadaTipo(String[][] tabuleiro) {

        int portaAvioesCont = 0;
        int encouracadoCont = 0;
        int cruzadorCont = 0;
        int submarinoCont = 0;
        int contratorpedeiroCont = 0;

        for (int i = 0; i < tabuleiro.length; i++) {
            for (int j = 0; j < tabuleiro[i].length; j++) {

                if (tabuleiro[i][j].equals("P")) {
                    portaAvioesCont++;
                } else if (tabuleiro[i][j].equals("E")) {
                    encouracadoCont++;
                } else if (tabuleiro[i][j].equals("C")) {
                    cruzadorCont++;
                } else if(tabuleiro[i][j].equals("S")) {
                    submarinoCont++;
                } else if (tabuleiro[i][j].equals("N")) {
                    contratorpedeiroCont++;
                }
            }
        }

        if (portaAvioesCont == 0 || encouracadoCont == 0 || cruzadorCont == 0 || submarinoCont == 0 || contratorpedeiroCont == 0) {
            System.out.print("O tabuleiro não inclui um navio de cada tipo. ");

            if (portaAvioesCont == 0) {
                System.out.println("Não há navio porta-aviões (P) no tabuleiro.");
            }
            if (encouracadoCont == 0) {
                System.out.println("Não há navio encouraçado (E) no tabuleiro.");
            } 
            if (cruzadorCont == 0) {
                System.out.println("Não há navio cruzador (C) no tabuleiro.");
            } 
            if (submarinoCont == 0) {
                System.out.println("Não há navio submarino (S) no tabuleiro.");
            } 
            if (contratorpedeiroCont == 0) {
                System.out.println("Não há navio contratorpedeiro (N) no tabuleiro.");
            }
            return "invalido";
        } else {
            return "valido";
        }
    }
}